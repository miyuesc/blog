{
  "name": "self", // 解析文件名称
  "uri": "https://self", // 保存到xml 定义标签 内，作为一个属性值，不清楚意义
  "prefix": "se", // 前缀
  "xml": {
    "tagAlias": "lowerCase" // xml 标签转为小写驼峰
  },
  "types": [ // 自定义标签类型数组
    {
      "name": "AttrOne", // 自定义标签名，在xml中显示为 se:attrOne
      // "extends": [], // 扩展选中的类型属性，每次创建数组内的元素实例时都会自动插入新的属性AttrOne
      "superClass": [ // 指定类型继承，通常自定义属性为ModdleElement，默认继承Element
        "Element"
        // 如果继承其他自定义配置文件的属性（比如b.json[prefix: "b", types: [{name: "TextB"}] 】）
        // 则superClass必须写完整的带前缀的名称 “b:TextB”
      ],
      "properties": [ // 自定义标签属性
        {
          "name": "name", // 属性名
          "type": "String", // 属性值类型，可以为其他自定义类型，比如属性值时AttrTwo，则 "type": "AttrTwo"
          "isAttr": "true" // 作为标签属性，体现为<se:attrOne name="xxx"></se:attrOne>
          // isMany: true // 属性值是否用数组保存，注意与其他配置的互斥：type不能为String、Number等，isAttr不能为true等等
        },
        {
          "name": "values",
          "type": "AttrOneProp",
          "isMany": true
        }
      ]
    },
    {
      "name": "AttrOneProp",
      "superClass": [
        "Element"
      ],
      "meta": {
        "allowedIn": [ "*" ] // 允许进入哪些元素标签内
      },
      "properties": [
        {
          "name": "propName",
          "type": "String",
          "isAttr": true // 作为内容填充，体现为<se:attrOne>xxx</se:attrOne>
        },
        {
          "name": "value",
          "type": "String",
          "isAttr": true // 作为内容填充，体现为<se:attrOne>xxx</se:attrOne>
        }
      ]
    },
    {
      "name": "AttrTwo",
      "superClass": [
        "Element"
      ],
      "meta": {
        "allowedIn": [ "*" ] // 允许进入哪些元素标签内
      },
      "properties": [
        {
          "name": "value",
          "type": "String",
          "isBody": true // 作为内容填充，体现为<se:attrOne>xxx</se:attrOne>
        }
      ]
    }
  ]
}
